/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const GetUserRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
export const GetUserRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetUserRequest$;
(function (GetUserRequest$) {
    /** @deprecated use `GetUserRequest$inboundSchema` instead. */
    GetUserRequest$.inboundSchema = GetUserRequest$inboundSchema;
    /** @deprecated use `GetUserRequest$outboundSchema` instead. */
    GetUserRequest$.outboundSchema = GetUserRequest$outboundSchema;
})(GetUserRequest$ || (GetUserRequest$ = {}));
export function getUserRequestToJSON(getUserRequest) {
    return JSON.stringify(GetUserRequest$outboundSchema.parse(getUserRequest));
}
export function getUserRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetUserRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetUserRequest' from JSON`);
}
//# sourceMappingURL=getuser.js.map