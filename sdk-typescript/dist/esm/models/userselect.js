/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const UserSelect$inboundSchema = z.object({
    id: z.string(),
    name: z.string(),
    age: z.number(),
});
/** @internal */
export const UserSelect$outboundSchema = z.object({
    id: z.string(),
    name: z.string(),
    age: z.number(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UserSelect$;
(function (UserSelect$) {
    /** @deprecated use `UserSelect$inboundSchema` instead. */
    UserSelect$.inboundSchema = UserSelect$inboundSchema;
    /** @deprecated use `UserSelect$outboundSchema` instead. */
    UserSelect$.outboundSchema = UserSelect$outboundSchema;
})(UserSelect$ || (UserSelect$ = {}));
export function userSelectToJSON(userSelect) {
    return JSON.stringify(UserSelect$outboundSchema.parse(userSelect));
}
export function userSelectFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UserSelect$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UserSelect' from JSON`);
}
//# sourceMappingURL=userselect.js.map